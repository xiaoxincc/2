/*#include <iostream>
using namespace  std;
int main() {
	//二维数组定义方式
	//1)数据类型 数组名[行数][列数];
	//2)数据类型 数组名[行数][列数]={{数据1,数据2},{数据3,数据4}};
	//3)数据类型 数组名[行数][列数]={数据1，数据2，数据3，数据4};
	//4)数据类型 数组名[][列数]={数据1，数据2，数据3，数据4};
	int arr1[2][3];
	int i, j;//i控制行数，j控制列数
	//利用遍历对数组元素进行赋值
	//1)数据类型 数组名[行数][列数];
//for (i = 0; i < 2; i++)
//{
//	for (j = 0; j < 3; j++)
//	{	
//		cout << "请输入数组第" << i << "行第" << j << "列" << "的元素" << endl;
//		cin >> arr1[i][j];
//	}
//}
	//利用遍历输出数组元素
//for (i = 0; i < 2; i++)
//{	
//	
//	for (j = 0; j < 3; j++)
//	{	
//		
//		cout << arr1[i][j] <<'\t';
//	}
//	cout << endl;
//}
	//2)数据类型 数组名[行数][列数]={{数据1,数据2},{数据3,数据4}};
	int  arr2[2][3] =
	{
		{1,2,3},
		{3,2,1}
	};
	//3)数据类型 数组名[行数][列数]={数据1，数据2，数据3，数据4};
	int arr3[2][3] = { 1,2,3,4,5,6 };
	//4)数据类型 数组名[][列数]={数据1，数据2，数据3，数据4};
	int arr4[][3] = { 1,2,3,4,5,6 };
	//数组名
	//可通过数组名判断其所占内存空间大小
	int n = sizeof(arr2);
	cout << n << endl;
	cout << "二维数组arr2所占用的空间为" << sizeof(arr2) << endl;
	cout << "二维数组arr2的第一行所占用的空间为" << sizeof(arr2[0]) << endl;
	cout << "二维数组arr2的第一个元素所占用的空间为" << sizeof(arr2[0][0]) << endl;
	cout << "二维数组arr2行数为" << sizeof(arr2) / sizeof(arr2[0]) << endl;
	cout << "二维数组arr2的列数为" << sizeof(arr2[0]) / sizeof(arr2[0][0]) << endl;
	//可以查看二维数组的首地址
	cout << "二维数组arr2的首地址为：" << arr2 << endl;
	cout << "二维数组arr2第一行的首地址为：" << arr2[0] << endl;
	cout<<"二维数组arr2第二行的首地址为："<<arr2[1]<<endl;
	cout << "二维数组arr2第一个元素的首地址为：" << &arr2[0][0] << endl;
	system("pause");
	return 0;
}*/